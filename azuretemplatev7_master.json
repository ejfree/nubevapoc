{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "networkInterfaces_destVNIC_name": {
            "defaultValue": "destVNIC",
            "type": "String"
        },
        "storageAccounts_nubevablobstorage_name": {
            "defaultValue": "nubevablobstorage",
            "type": "String"
        },
        "routeTables_default_to_peer_name": {
            "defaultValue": "default_to_peer",
            "type": "String"
        },
        "vmName": {
            "type": "string",
            "defaultValue": "nucontroller"
        },
        "networkInterfaces_sourceVNIC_name": {
            "defaultValue": "sourceVNIC",
            "type": "String"
        },
        "networkInterfaces_bastionVNIC_name": {
            "defaultValue": "bastionVNIC",
            "type": "String"
        },
        "virtualNetworks_nubevapoc_peer_name": {
            "defaultValue": "nubevapoc-peer",
            "type": "String"
        },
        "virtualNetworks_nubevapoc_vnet_name": {
            "defaultValue": "nubevapoc-vnet",
            "type": "String"
        },
        "networkSecurityGroups_Allow_All_name": {
            "defaultValue": "Allow_All",
            "type": "String"
        },
        "networkInterfaces_peer_insideVNIC_name": {
            "defaultValue": "peer-insideVNIC",
            "type": "String"
        },
        "networkInterfaces_peer_outsideVNIC_name": {
            "defaultValue": "peer-outsideVNIC",
            "type": "String"
        },
        "networkSecurityGroups_SSH_RDP_only_name": {
            "defaultValue": "SSH_RDP_only",
            "type": "String"
        },
        "publicIPAddresses_bastion_public_ip_name": {
            "defaultValue": "bastion_public_ip",
            "type": "String"
        },
        "subnets_dest_name": {
            "defaultValue": "dest",
            "type": "String"
        },
        "subnets_inside_name": {
            "defaultValue": "inside",
            "type": "String"
        },
        "subnets_source_name": {
            "defaultValue": "source",
            "type": "String"
        },
        "routes_to_internet_name": {
            "defaultValue": "to_internet",
            "type": "String"
        },
        "subnets_outside_name": {
            "defaultValue": "outside",
            "type": "String"
        },
        "subnets_bastion_name": {
            "defaultValue": "bastion",
            "type": "String"
        },
        "securityRules_Port_Any_name": {
            "defaultValue": "Port_Any",
            "type": "String"
        },
        "securityRules_Port_22_name": {
            "defaultValue": "Port_22",
            "type": "String"
        },
        "securityRules_Port_3789_name": {
            "defaultValue": "Port_3789",
            "type": "String"
        },
        "virtualNetworkPeerings_peer_to_poc_name": {
            "defaultValue": "peer-to-poc",
            "type": "String"
        },
        "virtualNetworkPeerings_poc_to_peer_name": {
            "defaultValue": "poc-to-peer",
            "type": "String"
        }
    },
    "variables": {
        "nicName": "specializedVMNic",
        "vmSize": "Standard_B2s",
        "storageName": "[concat('nustorage', uniqueString(resourceGroup().id))]",
        "storageKeyOperatorRole": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Authorization/roleDefinitions/81a9662b-bebf-436f-a333-f67b29880f12')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('networkInterfaces_bastionVNIC_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "7700b776-37ed-4cf1-a965-5a92bbddc536",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "etag": "W/\"c57d64b7-fc65-4aab-9eb7-5f8a1458b76f\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.10.100.10",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_bastion_public_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_vnet_name'), parameters('subnets_bastion_name'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "4cp3emycbewuta1rco5e4i0igd.xx.internal.cloudapp.net"
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SSH_RDP_only_name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_bastion_public_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_vnet_name'), parameters('subnets_bastion_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SSH_RDP_only_name'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccounts_nubevablobstorage_name')]",
            "apiVersion": "2017-06-01",
            "location": "westus2",
            "scale": null,
            "properties": {
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('networkInterfaces_destVNIC_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "88ba1ebf-e19e-485b-bcd0-eb39e033bfc5",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "etag": "W/\"3f82ffa6-eaca-420f-8968-9dd296b47db5\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.10.2.10",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_vnet_name'), parameters('subnets_dest_name'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "4cp3emycbewuta1rco5e4i0igd.xx.internal.cloudapp.net"
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SSH_RDP_only_name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_vnet_name'), parameters('subnets_dest_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SSH_RDP_only_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('networkInterfaces_peer_insideVNIC_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "ce22cef8-e995-4abb-9139-f6f80c34e596",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "etag": "W/\"0d3a113e-2fc3-4909-9a02-97a166fbc1c1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.11.1.10",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_peer_name'), parameters('subnets_inside_name'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "yhqonbdbot5ezevsubdhd1p3xb.xx.internal.cloudapp.net"
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Allow_All_name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_peer_name'), parameters('subnets_inside_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Allow_All_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('networkInterfaces_peer_outsideVNIC_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "a4a5e571-e2fd-4652-adf5-b8d764e64abb",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "etag": "W/\"e6f35f09-ac7f-4387-8a2c-04877888f5c1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.11.2.10",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_peer_name'), parameters('subnets_outside_name'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "yhqonbdbot5ezevsubdhd1p3xb.xx.internal.cloudapp.net"
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Allow_All_name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_peer_name'), parameters('subnets_outside_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Allow_All_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('networkInterfaces_sourceVNIC_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "89bae434-9c72-4e40-a002-a22196d99017",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "etag": "W/\"40763522-4059-4c7a-89f5-ef779c642b0a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "privateIPAddress": "10.10.1.10",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_vnet_name'), parameters('subnets_source_name'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "4cp3emycbewuta1rco5e4i0igd.xx.internal.cloudapp.net"
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SSH_RDP_only_name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_vnet_name'), parameters('subnets_source_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SSH_RDP_only_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('networkSecurityGroups_Allow_All_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "d37957e8-e64e-45db-9c3e-4c77982123f6",
                "securityRules": [
                    {
                        "name": "Port_Any",
                        "etag": "W/\"d0acff58-0763-465a-94d8-886281f7efe1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"d0acff58-0763-465a-94d8-886281f7efe1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"d0acff58-0763-465a-94d8-886281f7efe1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"d0acff58-0763-465a-94d8-886281f7efe1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"d0acff58-0763-465a-94d8-886281f7efe1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"d0acff58-0763-465a-94d8-886281f7efe1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"d0acff58-0763-465a-94d8-886281f7efe1\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('networkSecurityGroups_SSH_RDP_only_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "31f2e907-8ea7-47c4-b485-ff5c0c01a462",
                "securityRules": [
                    {
                        "name": "Port_22",
                        "etag": "W/\"80e92a42-83dd-43f5-b78e-531a1818f93a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Port_3789",
                        "etag": "W/\"80e92a42-83dd-43f5-b78e-531a1818f93a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3789",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "etag": "W/\"80e92a42-83dd-43f5-b78e-531a1818f93a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "etag": "W/\"80e92a42-83dd-43f5-b78e-531a1818f93a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "etag": "W/\"80e92a42-83dd-43f5-b78e-531a1818f93a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "etag": "W/\"80e92a42-83dd-43f5-b78e-531a1818f93a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "etag": "W/\"80e92a42-83dd-43f5-b78e-531a1818f93a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "etag": "W/\"80e92a42-83dd-43f5-b78e-531a1818f93a\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIPAddresses_bastion_public_ip_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "7893af04-4c4e-4b8b-8be7-7b6a8128b63d",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/routeTables",
            "name": "[parameters('routeTables_default_to_peer_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "routes": [
                    {
                        "name": "to_internet",
                        "etag": "W/\"f05c2258-383d-4937-8dce-bba6eb301c56\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.11.1.10"
                        }
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworks_nubevapoc_peer_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "84e6e0c1-7461-4cfe-92b2-a04671edfdb9",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.11.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "inside",
                        "etag": "W/\"e501905a-d2b8-4d79-b568-808e26f72177\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.11.1.0/24"
                        }
                    },
                    {
                        "name": "outside",
                        "etag": "W/\"e501905a-d2b8-4d79-b568-808e26f72177\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.11.2.0/24"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "peer-to-poc",
                        "etag": "W/\"e501905a-d2b8-4d79-b568-808e26f72177\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_vnet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false
                        }
                    }
                ]
            },
            "dependsOn": [
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworks_nubevapoc_vnet_name')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "resourceGuid": "33d29ff0-0902-492d-8371-13be4f234833",
                "addressSpace": {
                    "addressPrefixes": [
                        "10.10.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "source",
                        "etag": "W/\"27400ec0-13c3-4b35-84a4-cc4b300ed164\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.10.1.0/24",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_default_to_peer_name'))]"
                            }
                        }
                    },
                    {
                        "name": "dest",
                        "etag": "W/\"27400ec0-13c3-4b35-84a4-cc4b300ed164\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.10.2.0/24"
                        }
                    },
                    {
                        "name": "bastion",
                        "etag": "W/\"27400ec0-13c3-4b35-84a4-cc4b300ed164\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "addressPrefix": "10.10.100.0/24"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "poc-to-peer",
                        "etag": "W/\"27400ec0-13c3-4b35-84a4-cc4b300ed164\"",
                        "properties": {
                            "provisioningState": "Succeeded",
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_peer_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_default_to_peer_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_peer_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(parameters('networkSecurityGroups_Allow_All_name'), '/', parameters('securityRules_Port_Any_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_Allow_All_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(parameters('networkSecurityGroups_SSH_RDP_only_name'), '/', parameters('securityRules_Port_22_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SSH_RDP_only_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "name": "[concat(parameters('networkSecurityGroups_SSH_RDP_only_name'), '/', parameters('securityRules_Port_3789_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "3789",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 101,
                "direction": "Inbound",
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_SSH_RDP_only_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "name": "[concat(parameters('routeTables_default_to_peer_name'), '/', parameters('routes_to_internet_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.11.1.10"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_default_to_peer_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('virtualNetworks_nubevapoc_peer_name'), '/', parameters('subnets_inside_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.11.1.0/24"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_peer_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('virtualNetworks_nubevapoc_peer_name'), '/', parameters('subnets_outside_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.11.2.0/24"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_peer_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('virtualNetworks_nubevapoc_peer_name'), '/', parameters('virtualNetworkPeerings_peer_to_poc_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_vnet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_peer_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_vnet_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('virtualNetworks_nubevapoc_vnet_name'), '/', parameters('subnets_source_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.10.1.0/24",
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_default_to_peer_name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_vnet_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_default_to_peer_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('virtualNetworks_nubevapoc_vnet_name'), '/', parameters('subnets_dest_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.10.2.0/24"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_vnet_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('virtualNetworks_nubevapoc_vnet_name'), '/', parameters('subnets_bastion_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "addressPrefix": "10.10.100.0/24"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_vnet_name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "name": "[concat(parameters('virtualNetworks_nubevapoc_vnet_name'), '/', parameters('virtualNetworkPeerings_poc_to_peer_name'))]",
            "apiVersion": "2017-06-01",
            "scale": null,
            "properties": {
                "provisioningState": "Succeeded",
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_peer_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_vnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_nubevapoc_peer_name'))]"
            ]
        },
        {
            "name": "[variables('storageName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "location": "[resourceGroup().location]",
            "apiVersion": "2015-06-15",
            "dependsOn": [],
            "properties": {
                "accountType": "Standard_LRS"
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_vnet_name'), parameters('subnets_bastion_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_nubevapoc_vnet_name'), parameters('subnets_bastion_name'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/ManagedIdentityExtensionForLinux')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.ManagedIdentity",
                "type": "ManagedIdentityExtensionForLinux",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "port": 50342
                },
                "protectedSettings": {}
            }
        },
        {
            "apiVersion": "2016-07-01",
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[guid(string(deployment()))]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "comments": "You can retrieve the role definition ID with a simple Azure CLI command such as 'az role definition list --query \"[?properties.roleName == 'Contributor']\" --out json'",
            "properties": {
                "roleDefinitionId": "[variables('storageKeyOperatorRole')]",
                "principalId": "[reference(concat('Microsoft.Compute/virtualMachines/', parameters('vmName'),'/providers/Microsoft.ManagedIdentity/Identities/default'),'2015-08-31-PREVIEW').principalId]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "identity": {
                "type": "systemAssigned"
            },
            "name": "[parameters('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "plan": {
                "name": "byol",
                "publisher": "nubeva-inc",
                "product": "controller-dev-preview"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "nubeva",
                    "adminPassword": "GoNubeva1234",
                    "customData": "[base64(concat(parameters('vmName'),'|',resourceGroup().name,'|',variables('storageName')))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "nubeva-inc",
                        "offer": "controller-dev-preview",
                        "sku": "byol",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            }
        }
    ]
}
